<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2009, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<!-- These resources are around just to allow their values to be customized
     for different hardware and product builds. -->
<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <bool name="config_animateScreenLights">false</bool>

    <!-- The default iface on which to monitor data use -->
    <string name="config_datause_iface">rmnet_sdio0</string>

    <bool name="config_showNavigationBar">false</bool>

    <bool name="config_automatic_brightness_available">true</bool>

    <bool name="config_forceDisableHardwareKeyboard">true</bool>

    <integer name="config_screenBrightnessSettingMinimum">20</integer>
    <integer name="config_screenBrightnessDim">20</integer>

    <!-- SD card is hot-pluggable on this platform -->
    <bool name="config_batterySdCardAccessibility">true</bool>

    <!-- These are all dummies, but need to be present to enable UI control of auto-brightness
                  The actual control and values are all in-kernel -->
    <integer-array name="config_autoBrightnessLevels">
		<item>21</item> 
		<item>61</item> 
		<item>126</item> 
		<item>251</item> 
		<item>401</item> 
		<item>621</item> 
		<item>831</item> 
		<item>1201</item> 
		<item>1801</item> 
		<item>3501</item> 
    </integer-array>
    <!-- Array of output values for LCD backlight corresponding to the LUX values
                  in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
    -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
		<item>18</item> 
		<item>28</item> 
		<item>36</item> 
		<item>48</item> 
		<item>68</item> 
		<item>72</item> 
		<item>90</item> 
		<item>102</item> 
		<item>136</item> 
		<item>166</item> 
		<item>226</item> 
    </integer-array>
    <!-- Array of output values for button backlight corresponding to the LUX values
                  in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
    -->
    <integer-array name="config_autoBrightnessButtonBacklightValues">
		<item>255</item> 
		<item>255</item> 
		<item>255</item> 
		<item>255</item> 
		<item>255</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
    </integer-array>

    <!-- Array of output values for keyboard backlight corresponding to the LUX values
                  in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessKeyboardBacklightValues">
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
		<item>0</item> 
    </integer-array>

    <string-array translatable="false" name="config_tether_usb_regexs">
        <item>usb0</item> 
        <item>rndis0</item> 
    </string-array>

    <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
    <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or
                      <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
    <integer-array translatable="false" name="config_tether_upstream_types">
        <item>0</item>
        <item>1</item>
        <item>5</item>
        <item>7</item>
    </integer-array>

    <string-array translatable="false" name="config_tether_wifi_regexs">
        <item>"wlan0"</item>
    </string-array>

    <!-- List of regexpressions describing the interface (if any) that represent tetherable
                  bluetooth interfaces.  If the device doesn't want to support tethering over bluetooth this
         should be empty. -->
    <string-array translatable="false" name="config_tether_bluetooth_regexs">
        <item>"bt-pan"</item>
    </string-array>

    <!-- An Array of "[Connection name],[ConnectivityManager.TYPE_xxxx],
                  [associated radio-type],[priority],[restoral-timer(ms)],[dependencyMet]  -->
    <!-- the 5th element "resore-time" indicates the number of milliseconds to delay
                  before automatically restore the default connection.  Set -1 if the connection
         does not require auto-restore. -->
    <!-- the 6th element indicates boot-time dependency-met value. -->
    <string-array translatable="false" name="networkAttributes">
        <item>"wifi,1,1,1,-1,true"</item>
        <item>"mobile,0,0,0,-1,true"</item>
        <item>"mobile_mms,2,0,2,60000,true"</item>
        <item>"mobile_supl,3,0,2,60000,true"</item>
        <item>"mobile_hipri,5,0,3,60000,true"</item>
        <item>"mobile_bluetooth,7,7,1,-1,true"</item>
        <item>"wifi_p2p,13,1,0,-1,true"</item>
    </string-array>

    <!-- An Array of "[ConnectivityManager connectionType],
                  [# simultaneous connection types]"  -->
    <string-array translatable="false" name="radioAttributes">
        <item>"1,1"</item>
        <item>"0,1"</item>
        <item>"2,1"</item>
        <item>"7,1"</item>
    </string-array>

    <!-- Is the notification LED intrusive? Used to decide if there should be a disable option 
    <bool name="config_intrusiveNotificationLed">true</bool> -->

    <!-- Component name of the default wallpaper. This will be ImageWallpaper if not
                  specified 
    <string name="default_wallpaper_component">com.android.phasebeam/.PhaseBeamWallpaper</string> -->

    <integer name="config_deviceHardwareKeys">7</integer>

	<integer-array name="config_longPressVibePattern">
		<item>0</item> 
		<item>25</item> 
    </integer-array>
	
	<integer-array name="config_virtualKeyVibePattern">
		<item>0</item> 
		<item>20</item> 
    </integer-array>

	<integer-array name="config_keyboardTapVibePattern">
		<item>0</item> 
		<item>15</item> 
    </integer-array>

	<integer-array name="config_safeModeDisabledVibePattern">
		<item>0</item> 
		<item>1</item> 
		<item>20</item> 
		<item>21</item> 
    </integer-array>

	<integer-array name="config_safeModeEnabledVibePattern">
		<item>0</item> 
		<item>1</item> 
		<item>20</item> 
		<item>21</item> 
		<item>500</item> 
		<item>600</item> 
  </integer-array>

  <integer-array name="config_scrollBarrierVibePattern">
		<item>0</item> 
		<item>15</item> 
		<item>10</item> 
		<item>10</item> 
  </integer-array>

  <integer name="config_multiuserMaximumUsers">3</integer>

  <!-- Boolean indicating if current platform supports BLE peripheral mode -->
  <bool name="config_bluetooth_le_peripheral_mode_supported">true</bool>

  <!-- Whether WiFi display is supported by this device.
  There are many prerequisites for this feature to work correctly.
  Here are a few of them:
  * The WiFi radio must support WiFi P2P.
  * The WiFi radio must support concurrent connections to the WiFi display and
  to an access point.
  * The Audio Flinger audio_policy.conf file must specify a rule for the "r_submix"
  remote submix module. This module is used to record and stream system
  audio output to the WiFi display encoder in the media server.
  * The remote submix module "audio.r_submix.default" must be installed on the device.
  * The device must be provisioned with HDCP keys (for protected content). -->
  <bool name="config_enableWifiDisplay">true</bool>

  <!-- Device type information conforming to Annex B format in WiFi Direct specification.
  The default represents a dual-mode smartphone -->
  <string translatable="false" name="config_wifi_p2p_device_type">1-0050F204-1</string>

  <!-- Can we change the battery color? -->
  <bool name="config_multiColorBatteryLed">true</bool>

  <!-- SD card is hot-pluggable on this platform -->
  <bool name="config_batterySdCardAccessibility">true</bool>

  <!-- Disable lockscreen translucent decor by default -->
  <bool name="config_enableLockScreenTranslucentDecor">true</bool>

  <!-- Enable the option to check proximity sensor when deciding whether to
turn the screen on
NOTE ! - Enable for devices that have a fast response proximity sensor
-->
  <bool name="config_proximityCheckOnWake">true</bool>
  <integer name="config_proximityCheckTimeout">400</integer>

</resources>
